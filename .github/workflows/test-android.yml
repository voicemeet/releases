name: Test Android

on:
  workflow_dispatch:
    inputs:
      ref:
        type: string
        description: "The branch, tag or SHA to checkout. (default to main)"
        default: "main"
        required: false

# Declare default permissions as readonly.
permissions: read-all

env:
  repository: 'VoiceMeet/voicemeet'
  main-path: 'main'
  source-path: 'voicemeet'

jobs:
  apk:
    name: Create apk
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          path: ${{ env.main-path }}

      - uses: actions/checkout@v4
        with:
          repository: ${{ env.repository }}
          ref: ${{ github.event.inputs.ref }}
          token: ${{ secrets.VM_RELEASE_TOKEN }}
          path: ${{ env.source-path }}

      - uses: actions/setup-java@v4
        with:
          java-version: "17.x"
          distribution: 'temurin'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.32.8'

      - name: Configure .env
        run: echo "$ENV_KEY" | base64 --decode > .env
        env:
          ENV_KEY: ${{ secrets.ENV_STG_BASE64 }}
        working-directory: ${{ env.source-path }}

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Install Deps
        run: flutter pub get
        working-directory: ${{ env.source-path }}

      - name: Configure Keystore for Android
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "storeFile=upload-keystore.jks" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        working-directory: ${{ env.source-path }}/android

      - name: Build Apk
        run: flutter build apk --no-tree-shake-icons --dart-define-from-file=.env --flavor staging
        working-directory: ${{ env.source-path }}

      - name: Set version
        id: version_step
        run: |
          VERSION=$(yq '.version' pubspec.yaml)
          echo "VERSION: $VERSION."

          VERSION_SHORT=$(echo "$VERSION" | sed -e "s/+.*//")
          echo "VERSION_SHORT: $VERSION_SHORT."

          BUILD_NUMBER=$(echo "$VERSION" | sed -e "s/.*+//")
          echo "BUILD_NUMBER: $BUILD_NUMBER."

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_short=$VERSION_SHORT" >> $GITHUB_OUTPUT
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT
        working-directory: ${{ env.source-path }}

      # Package the build.
      - name: Copy build for Android
        run: |
          ls -la
          echo "VERSION: $VERSION_SHORT.$BUILD_NUMBER"
          cp *.apk $GITHUB_WORKSPACE/VoiceMeet-"$VERSION_SHORT.$BUILD_NUMBER".apk
        working-directory: ${{ env.source-path }}/build/app/outputs/apk/staging/release
        env:
          VERSION_SHORT: ${{ steps.version_step.outputs.version_short }}
          BUILD_NUMBER: ${{ steps.version_step.outputs.build_number }}

      - uses: actions/upload-artifact@v4
        with:
          name: android-apk-artifact
          path: ./*.apk

      - name: Clean up
        if: ${{ always() }}
        run: |
          rm -f android/app/upload-keystore.jks
          rm -f android/key.properties
          rm -f .env
        working-directory: ${{ env.source-path }}

name: Release web
run-name: Release web ${{ github.ref_name }}

on:
  # Enable manual run
  workflow_dispatch:
    inputs:
      ref:
        type: string
        description: "The branch, tag or SHA to checkout. (default to main)"
        default: "main"
        required: false

# Declare default permissions as readonly.
permissions: read-all

env:
  repository: 'voicemeet/voicemeet'
  main-path: 'main'
  source-path: 'voicemeet'

jobs:
  get-flutter-version:
    name: Get flutter version
    runs-on: ubuntu-22.04
    outputs:
      flutter_channel: ${{ steps.flutter_version_step.outputs.flutter_channel }}
      flutter_version: ${{ steps.flutter_version_step.outputs.flutter_version }}
    steps:
      - uses: actions/checkout@v5
        with:
          path: ${{ env.main-path }}

      - uses: actions/checkout@v5
        with:
          repository: ${{ env.repository }}
          token: ${{ secrets.VM_RELEASE_TOKEN }}
          path: ${{ env.source-path }}

      - name: Set flutter version
        id: flutter_version_step
        run: |
          flutter_channel=$(sed -n -E "s/.*flutter-channel:\ '(.*)'/\1/p" .github/workflows/release.yml|head -n1)
          flutter_version=$(sed -n -E "s/.*flutter-version:\ '(.*)'/\1/p" .github/workflows/release.yml|head -n1)
          echo "flutter_channel: $flutter_channel, flutter_version: $flutter_version."

          echo "flutter_channel=$flutter_channel" >> $GITHUB_OUTPUT
          echo "flutter_version=$flutter_version" >> $GITHUB_OUTPUT
        working-directory: ${{ env.source-path }}

  web:
    name: Create web
    runs-on: ubuntu-22.04
    needs:
      - get-flutter-version
    steps:
      - uses: actions/checkout@v5
        with:
          path: ${{ env.main-path }}

      - uses: actions/checkout@v5
        with:
          repository: ${{ env.repository }}
          ref: ${{ github.event.inputs.ref }}
          token: ${{ secrets.VM_RELEASE_TOKEN }}
          path: ${{ env.source-path }}

      - name: Install dependencies for Linux
        run: |
          # https://github.com/getsentry/sentry-dart/issues/2504
          sudo apt-get update -y && sudo apt-get upgrade -y
          sudo apt-get install -y curl libcurl4-openssl-dev git unzip xz-utils zip libglu1-mesa
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ needs.get-flutter-version.outputs.flutter_channel }}
          flutter-version: ${{ needs.get-flutter-version.outputs.flutter_version }}

      - name: Configure .env
        run: echo "$ENV_PROD_BASE64" | base64 --decode > .env
        env:
          ENV_PROD_BASE64: ${{ secrets.ENV_PROD_BASE64 }}
        working-directory: ${{ env.source-path }}

      - name: Flutter doctor -v
        run: flutter doctor -v

      - name: Install flutter dependencies
        run: flutter pub get
        working-directory: ${{ env.source-path }}

      - name: Build flutter
        run: flutter build web --dart-define-from-file=.env
        working-directory: ${{ env.source-path }}

      - name: Copy files to flutter web
        run: cp LICENSE README.md ./build/web
        working-directory: ${{ env.source-path }}

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          external_repository: voicemeet/web.voicemeet.io
          publish_branch: main
          personal_token: ${{ secrets.VM_RELEASE_TOKEN }}
          publish_dir: ./${{ env.source-path }}/build/web
          cname: web.voicemeet.io

      - name: Clean up
        if: ${{ always() }}
        run: rm -f .env
        working-directory: ${{ env.source-path }}
